// msg hostile on eevblog forumn if help or corrections needed.
// version #0.2
/*========================================================
    Uncomment the define that matched your memory board
	change the defined pin constants to match the 
	jumpering of arduino pins to J1 & J2 on memory board
==========================================================*/
/*==========================================================
				EDIT SECTION
============================================================*/
//#define STANDALONE // use dip switch
#define RAM_01 // IC-750/750A Japan, IC-751/IC-751A
//#define RAM_02  // IC-271D Japan, IC-271A/E/H Europe
//#define RAM_03 // , IC-271A/E/H USA
//#define RAM_04 // IC-731 Japan, IC-471E, IC-471H Europe
//#define RAM_05 // , IC-741H USA, IC-471A
//#define RAM_06 // #IC-271A/E/H Australia,
//#define RAM_07 // IC-471 Japan, IC-745
//#define RAM_08 // IC-R71 Japan, IC-R7E Europe 
//#define RAM_09 // IC-R71A Australia 
//#define RAM_10 //, IC-471E
//#define RAM_11 // , , IC-R71D German 
//#define RAM_14 // , ,  IC-1271 (not A or E) 
//#define RAM_CUSTOM // CUSTOM SLOT
#include <avr/pgmspace.h>
const byte 
//Change the A# and # arduion pin inditifiers to match your jumpers
           WR = A5,   // J2:8
		   DATA0 = A4,// J2:7
		   DATA1 = A1,// J2:6
		   DATA2 = A2,// J2:5
		   DATA3 = A3,// J2:4
					  // J2:3 5V
					  // J2:2 Not Connected
					  // J2:1 GND

		   ADDR0 = 11,// J1:1
		   ADDR1 = 10,// J1:2
		   ADDR2 = 9, // J1:3
		   ADDR3 = 8, // J1:4
		   ADDR4 = 7, // J1:5
		   ADDR5 = 6, // J1:6
		   ADDR6 = 5, // J1:7
		   ADDR7 = 4, // J1:8
		   ADDR8 = 3, // J1:9
		   ADDR9 = 2, // J1:10
		   CS = 12,	  // J1:11
		 			  // J1:12  5V
		   LED = 13 , 

		   SEL0 = 20,
		   SEL1 = 21,
		   SEL2 = 22,
		   SEL3 = 23,

		   BUTTON = 27,
		   
		   LED_PRG = 24,
		   LED_PASS = 25,
		   LED_FAIL = 26;
//==========================================================
/*==========================================================
			END	EDIT SECTION
============================================================*/
const unsigned char ram01[512] PROGMEM =
{
    0x00, 0xF1, 0xFF, 0x1F, 0xF0, 0x02, 0xFF, 0xFF, 0x00, 0x0B, 0x00, 0x68, 0x68, 0x00, 0x03, 0x20, 
    0x05, 0x93, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x30, 0x00, 
    0x81, 0x00, 0x00, 0x02, 0x00, 0x05, 0x43, 0x00, 0x00, 0x14, 0x00, 0x05, 0x96, 0x00, 0x00, 0x57, 
    0x00, 0x05, 0x99, 0x00, 0x00, 0x50, 0x10, 0x05, 0x93, 0x10, 0x00, 0x54, 0x10, 0x05, 0x97, 0x10, 
    0x00, 0x58, 0x10, 0x05, 0x90, 0x20, 0x00, 0x51, 0x20, 0x05, 0x44, 0x20, 0x00, 0x15, 0x20, 0x05, 
    0x97, 0x20, 0x00, 0x00, 0x30, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 
    0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;
const unsigned char ram02[512] PROGMEM =
{
    0x00, 0xF1, 0xFF, 0x3F, 0xF2, 0x02, 0xFF, 0xFF, 0x51, 0x59, 0xFF, 0x78, 0xFF, 0x00, 0x03, 0x20, 
    0x07, 0x14, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x04, 0x34, 0x10, 0x00, 0x09, 0x93, 0x51, 0x00, 
    0x04, 0x41, 0x00, 0x06, 0x41, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x60, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 
    0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 
    0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 
    0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 
    0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 
    0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 
    0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 
    0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 
    0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 
    0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 
    0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 
    0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 
    0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 
    0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 
    0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;
const unsigned char ram03[512] PROGMEM =
{
    0x00, 0xF1, 0xFF, 0x3F, 0xF2, 0x02, 0xFF, 0xFF, 0x51, 0x59, 0xFF, 0x78, 0xFF, 0x00, 0x03, 0x20, 
    0x07, 0x14, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x51, 0x00, 
    0x83, 0x41, 0x00, 0x28, 0x41, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x60, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 
    0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 
    0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 
    0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 
    0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 
    0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 
    0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 
    0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 
    0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 
    0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 
    0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 
    0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 
    0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 
    0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 
    0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;
const unsigned char ram04[512] PROGMEM =
{
    0x00, 0xF1, 0xFF, 0x5F, 0xF1, 0x02, 0xFF, 0xFF, 0x51, 0x59, 0xFF, 0x78, 0xFF, 0x05, 0x82, 0x20, 
    0x88, 0x48, 0x31, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x00, 0x44, 0x0F, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x05, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 
    0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 
    0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 
    0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 
    0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 
    0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 
    0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 
    0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 
    0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 
    0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 
    0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 
    0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 
    0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 
    0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 
    0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;
const unsigned char ram05[512] PROGMEM =
{
    0x00, 0xF1, 0xFF, 0x5F, 0xF1, 0x02, 0xFF, 0xFF, 0x51, 0x59, 0xFF, 0x78, 0xFF, 0x05, 0x82, 0x20, 
    0x88, 0x48, 0x31, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x99, 0x99, 0x99, 0x44, 0x0F, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x05, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 
    0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 
    0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 
    0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 
    0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 
    0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 
    0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 
    0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 
    0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 
    0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 
    0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 
    0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 
    0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 
    0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 
    0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x05, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;
const unsigned char ram06[512] PROGMEM =
{
    0x00, 0xF1, 0xFF, 0x3F, 0xF2, 0x02, 0xFF, 0xFF, 0x51, 0x59, 0xFF, 0x78, 0xFF, 0x00, 0x03, 0x20, 
    0x07, 0x14, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x04, 0x34, 0x10, 0x00, 0x09, 0x93, 0x51, 0x00, 
    0x04, 0x41, 0x00, 0x08, 0x41, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x60, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 
    0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 
    0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 
    0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 
    0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 
    0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 
    0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 
    0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 
    0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 
    0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 
    0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 
    0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 
    0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 
    0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 
    0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0x00, 0x60, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x54, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;
const  unsigned char ram07[512] PROGMEM =
{
    0x00, 0xF1, 0xFF, 0x1F, 0xF0, 0x02, 0xFF, 0xFF, 0x51, 0x59, 0x00, 0x00, 0x00, 0x05, 0x13, 0x20, 
    0x05, 0x93, 0x00, 0x05, 0x00, 0x00, 0x00, 0x58, 0x90, 0x00, 0x00, 0x05, 0x10, 0x00, 0x30, 0x00, 
    0x81, 0x00, 0x09, 0x91, 0x00, 0x05, 0x43, 0x00, 0x00, 0x14, 0x00, 0x05, 0x96, 0x00, 0x00, 0x57, 
    0x00, 0x05, 0x99, 0x00, 0x00, 0x50, 0x10, 0x05, 0x93, 0x10, 0x00, 0x54, 0x10, 0x05, 0x97, 0x10, 
    0x00, 0x58, 0x10, 0x05, 0x90, 0x20, 0x00, 0x51, 0x20, 0x05, 0x44, 0x20, 0x00, 0x15, 0x20, 0x05, 
    0x97, 0x20, 0x00, 0x00, 0x30, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;
const unsigned char ram08[512] PROGMEM =
{
    0x00, 0xF1, 0xFF, 0x1F, 0xF0, 0x02, 0xFF, 0xFF, 0x00, 0x0B, 0x59, 0x68, 0x68, 0x00, 0x03, 0x20, 
    0x05, 0x93, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x30, 0x00, 
    0x10, 0x00, 0x00, 0x00, 0x30, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;
const unsigned char ram09[512] PROGMEM =
{
    0x00, 0xF1, 0xFF, 0x1F, 0xF0, 0x02, 0xFF, 0xFF, 0x00, 0x0B, 0x59, 0x68, 0x68, 0x00, 0x03, 0x20, 
    0x05, 0x93, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x30, 0x00, 
    0x02, 0x00, 0x00, 0x00, 0x30, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;
const unsigned char ram10[512] PROGMEM =
{
    0x00, 0xF1, 0xFF, 0x5F, 0xF1, 0x02, 0xFF, 0xFF, 0x51, 0x59, 0xFF, 0x78, 0xFF, 0x05, 0x82, 0x20, 
    0x88, 0x48, 0x31, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x00, 0x44, 0x0F, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x67, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 
    0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 
    0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 
    0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 
    0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 
    0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 
    0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 
    0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 
    0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 
    0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 
    0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 
    0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 
    0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 
    0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 
    0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 
    0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0x00, 0x67, 
    0x01, 0x00, 0x50, 0x00, 0x00, 0x33, 0x40, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;
const unsigned char ram11[512] PROGMEM =
{
    0x00, 0xF1, 0xFF, 0x1F, 0xF0, 0x02, 0xFF, 0xFF, 0x00, 0x0B, 0x59, 0x68, 0x68, 0x00, 0x03, 0x20, 
    0x05, 0x93, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x30, 0x05, 
    0x10, 0x00, 0x00, 0x16, 0x20, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;
const unsigned char ram14[512] PROGMEM =
{
    0xF0, 0xF1, 0xFF, 0x6F, 0xF1, 0x02, 0xFF, 0xFF, 0x51, 0x59, 0xFF, 0x78, 0xFF, 0x00, 0x00, 0x00, 
    0x29, 0x99, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x06, 0x21, 0x00, 0x00, 0x00, 0x03, 0x1F, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x00, 0x28, 0x00, 
    0x50, 0x00, 0x00, 0x59, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 0x00, 0x09, 0x21, 0x00, 0x00, 
    0x28, 0x00, 0x50, 0x02, 0x00, 0x58, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x02, 0x00, 0x58, 0x21, 
    0x00, 0x00, 0x28, 0x01, 0x50, 0x00, 0x21, 0x29, 0x21, 0x00, 0x00, 0x28, 0x01, 0x50, 0x00, 0x63, 
    0x29, 0x21, 0x00, 0x00, 0x28, 0x01, 0x50, 0x00, 0x47, 0x29, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 
    0x00, 0x27, 0x89, 0x21, 0x00, 0x00, 0x28, 0x01, 0x50, 0x00, 0x85, 0x69, 0x21, 0x00, 0x00, 0x28, 
    0x00, 0x50, 0x00, 0x27, 0x59, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 0x67, 0x59, 0x21, 0x00, 
    0x00, 0x28, 0x00, 0x50, 0x00, 0x03, 0x59, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 0x06, 0x59, 
    0x21, 0x00, 0x00, 0x28, 0x01, 0x50, 0x00, 0x82, 0x29, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 
    0x00, 0x06, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 0x89, 0x59, 0x21, 0x00, 0x00, 0x28, 0x00, 
    0x50, 0x00, 0x01, 0x99, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 0x00, 0x69, 0x21, 0x00, 0x00, 
    0x28, 0x00, 0x50, 0x00, 0x27, 0x79, 0x21, 0x00, 0x00, 0x28, 0x01, 0x50, 0x00, 0x48, 0x29, 0x21, 
    0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 0x85, 0x79, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 0x86, 
    0x59, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 0x02, 0x59, 0x21, 0x00, 0x00, 0x28, 0x01, 0x50, 
    0x00, 0x26, 0x29, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 0x48, 0x49, 0x21, 0x00, 0x00, 0x28, 
    0x00, 0x50, 0x00, 0x88, 0x39, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 0x87, 0x59, 0xAA, 0xA0, 
    0x00, 0x28, 0x00, 0x50, 0x00, 0x89, 0x69, 0x21, 0x00, 0x00, 0x28, 0x01, 0x50, 0x00, 0x85, 0x29, 
    0x21, 0x00, 0x00, 0x28, 0x01, 0x50, 0x00, 0x69, 0x29, 0x21, 0x00, 0x00, 0x28, 0x01, 0x50, 0x00, 
    0x85, 0x29, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 0x27, 0x49, 0x21, 0x00, 0x00, 0x28, 0x01, 
    0x50, 0x00, 0x41, 0x29, 0x21, 0x00, 0x00, 0x28, 0x00, 0x50, 0x00, 0x71, 0x69, 0x21, 0x00, 0x00, 
    0x28, 0x00, 0x50, 0x00, 0x01, 0x99, 0x21, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;

const unsigned char ramCust[512] PROGMEM =
{
    0x00, 0xF1, 0xFF, 0x1F, 0xF0, 0x02, 0xFF, 0xFF, 0x00, 0x0B, 0x59, 0x68, 0x68, 0x00, 0x03, 0x20, 
    0x05, 0x93, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x30, 0x05, 
    0x10, 0x00, 0x00, 0x16, 0x20, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0x10, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
} ;
int ramByte = 0;
int nibbleCount = 0;        
int byteCount = 0;        
void setAddr(void);
void setRam(void);
void setData(void);
void write(void);
void loadRam(bool clone);
void dumpRam(bool show);
void verifyRam(void);
void program(void);
byte readNib(void);
void cloneRam(void);
void help(void);
byte dumpBytes[512];
byte readData;
unsigned char ramBytes[512];
const unsigned char * p_ramBytes;
char buff[40];
byte selector;

void setup() { 
 // initialize the address digital pins as an output.
 Serial.begin(115200);
 digitalWrite(WR, HIGH);
 digitalWrite(CS, HIGH);  
 pinMode(ADDR0, OUTPUT);
 pinMode(ADDR1, OUTPUT);
 pinMode(ADDR2, OUTPUT);
 pinMode(ADDR3, OUTPUT);
 pinMode(ADDR4, OUTPUT);
 pinMode(ADDR5, OUTPUT);
 pinMode(ADDR6, OUTPUT);
 pinMode(ADDR7, OUTPUT);
 pinMode(ADDR8, OUTPUT);
 pinMode(ADDR9, OUTPUT);
 pinMode(CS, OUTPUT);
 pinMode(WR, OUTPUT);

 //set the analog pins as inputs for now. These are the four data lines, D0-D3
 pinMode(DATA0, INPUT);
 pinMode(DATA1, INPUT);
 pinMode(DATA2, INPUT);
 pinMode(DATA3, INPUT);
 pinMode(LED_PRG, OUTPUT);
 pinMode(LED_PASS, OUTPUT);
 pinMode(LED_FAIL, OUTPUT);
 pinMode(SEL0, INPUT_PULLUP);
 pinMode(SEL1, INPUT_PULLUP);
 pinMode(SEL2, INPUT_PULLUP);
 pinMode(SEL3, INPUT_PULLUP);
 pinMode(BUTTON, INPUT_PULLUP);
 digitalWrite(SEL0, HIGH);
 digitalWrite(SEL1, HIGH);
 digitalWrite(SEL2, HIGH);
 digitalWrite(SEL3, HIGH);
 digitalWrite(BUTTON, HIGH);
 help();
 
digitalWrite(LED_PRG, LOW);
digitalWrite(LED_PASS, LOW);
digitalWrite(LED_FAIL, LOW);
delay(1);
}

// Wait for command to decide action.
void loop(){ 
		if ( digitalRead(BUTTON) == 0){
			setRam();
			program();
		}
		if (Serial.available() > 0) { 		
		String command = Serial.readStringUntil('\n');
		if (command.startsWith("p")) {
			setRam();
			program();
		}
		else if (command.startsWith("d")) 
			dumpRam(true);
		else if (command.startsWith("v")) {
			setRam();
			verifyRam();
		}
		else if (command.startsWith("c")) 
			cloneRam();
		else
			help();
		command = "";
	}
	
}

// program ramBytes array into memory
void loadRam(bool clone){
	Serial.println("Progamming Memory ");
	nibbleCount=0;
	byteCount=0;
	do
	{
		if (clone)
			ramByte = dumpBytes[byteCount];
		else
			ramByte = ramBytes[byteCount];
		sprintf(buff,"%03d:%02X",byteCount, ramBytes[byteCount]);
		//Serial.println(buff);
		digitalWrite(LED, HIGH);		// extract upper nibble. LED is just and led indicating upper nibble 
		setAddr();
		digitalWrite(DATA0, bitRead(ramByte,4));
		digitalWrite(DATA1, bitRead(ramByte,5));
		digitalWrite(DATA2, bitRead(ramByte,6));
		digitalWrite(DATA3, bitRead(ramByte,7));
		write();
		nibbleCount++;  //inc memory pointer  This nibbleCounter inc once for each nibble. Memory is 1024 x 4 = 512 bytes.   
		digitalWrite(LED, LOW);// extract lower nibble
		setAddr();
		digitalWrite(DATA0, bitRead(ramByte,0));
		digitalWrite(DATA1, bitRead(ramByte,1));
		digitalWrite(DATA2, bitRead(ramByte,2));
		digitalWrite(DATA3, bitRead(ramByte,3));
		write();
		nibbleCount++;
		byteCount++;
	} while ((nibbleCount) <= 1023); 
}

// readout all address from memory and print to console
void dumpRam(bool show){
	digitalWrite(LED_PRG, HIGH);
	Serial.println("Dumping Memory");
	delayMicroseconds (500);
	nibbleCount=0;
	byteCount=0;
	byte value;
	do
	{
		digitalWrite(LED, HIGH);		
		setAddr();
		value =  readNib();
		nibbleCount++;  
		digitalWrite(LED, LOW);// extract lower nibble
		setAddr();
		dumpBytes[byteCount] = (value<<4) |  readNib();
		
		if (show){
			if ( byteCount % 16 == 0 )
				Serial.println();
			sprintf(buff,"0x%02X, ",dumpBytes[byteCount]);
			Serial.print(buff);
		}
		nibbleCount++;
		byteCount++;
	} while ((nibbleCount) <= 1023); 
	Serial.println();
}

void verifyRam(void){
	digitalWrite(LED_PRG, HIGH);
	int checks = 0;
	Serial.println("Verifying Memory");
	for ( int i; i < 512; i++){
		if (ramBytes[i] == dumpBytes[i]){
		}
		else {
			sprintf(buff,"%03d:%02X Failed, Expeted %02X", i, dumpBytes[i], ramBytes[i]);
			Serial.println(buff);
			checks++;
		}
	}
	if (checks){
		digitalWrite(LED_FAIL, HIGH);
		Serial.print(checks, DEC);
		Serial.println("\tFails");
	}
	else{
		digitalWrite(LED_PASS, HIGH);
		Serial.println("Passed");
		}

	digitalWrite(LED_PRG, LOW);
}

void cloneRam(void){
	digitalWrite(LED_PRG, HIGH);
	int checks = 0;
	Serial.println("Connect Orignial Memory, type g and enter");
	while(Serial.available() == 0) { };		
	String command = Serial.readStringUntil('\n');
	if (command.startsWith("g")) 
	{
		dumpRam(false);
		command = "";
		Serial.println("Connect New Memory, type g and enter");
		while(Serial.available() == 0) { };		
		String command = Serial.readStringUntil('\n');
		if (command.startsWith("g")) 
		{
			loadRam(true);
			Serial.println("Done");
		}
	}
}

// convert nibbleCount to address lines
void setAddr(void){
	int i = 1;
	digitalWrite(ADDR0,bitRead(nibbleCount,0));
	digitalWrite(ADDR1,bitRead(nibbleCount,1));
	digitalWrite(ADDR2,bitRead(nibbleCount,2));
	digitalWrite(ADDR3,bitRead(nibbleCount,3));
	digitalWrite(ADDR4,bitRead(nibbleCount,4));
	digitalWrite(ADDR5,bitRead(nibbleCount,5));
	digitalWrite(ADDR6,bitRead(nibbleCount,6));
	digitalWrite(ADDR7,bitRead(nibbleCount,7));
	digitalWrite(ADDR8,bitRead(nibbleCount,8));
	digitalWrite(ADDR9,bitRead(nibbleCount,9));
	delayMicroseconds (1);  
}

// change pins to output,  
// activate WR so memory doesn't drive I/Os, 
// CS, wait
// un-CS, release the WR.
void write(void){
	pinMode(DATA0, OUTPUT);
	pinMode(DATA1, OUTPUT);
	pinMode(DATA2, OUTPUT);
	pinMode(DATA3, OUTPUT);
	digitalWrite(WR, LOW); 
	digitalWrite(CS, LOW);  
	delayMicroseconds (100);
	digitalWrite(CS, HIGH);  
	digitalWrite(WR, HIGH); 
	pinMode(DATA0, INPUT);
	pinMode(DATA1, INPUT);
	pinMode(DATA2, INPUT);
	pinMode(DATA3, INPUT);
	delayMicroseconds (100);  
}

byte readNib(void){
	byte nib = 0;
	digitalWrite(WR, HIGH); 
	digitalWrite(CS, LOW);  
	nib = digitalRead(DATA3);  
	nib = (nib<<1) | digitalRead(DATA2);  
	nib = (nib<<1) | digitalRead(DATA1);  
	nib = (nib<<1) | digitalRead(DATA0);  
	delayMicroseconds (100);
	digitalWrite(WR, HIGH); 
	digitalWrite(CS, HIGH);  
	delayMicroseconds (100);  
	return nib;
}
void setRam(void)
{
#ifdef STANDALONE
	Serial.println("Dip Switch Selection");
	selector = digitalRead(SEL3);
	selector = (selector << 1)| digitalRead(SEL2);
	selector = (selector << 1)| digitalRead(SEL1);
	selector = (selector << 1)| digitalRead(SEL0);
	selector &= 0xf;
	switch (selector) {
		case 1:
			p_ramBytes= ram01;
			Serial.println("Selected RAM 01");
	    break;
		case 2:
			p_ramBytes= ram02;
			Serial.println("Selected RAM 02");
			break;
		case 3:
			Serial.println("Selected RAM 03");
			p_ramBytes= ram03;
			break;
		case 4:
			Serial.println("Selected RAM 04");
			p_ramBytes= ram04;
			break;
		case 5:
			Serial.println("Selected RAM 05");
			p_ramBytes= ram05;
			break;
		case 6:
			Serial.println("Selected RAM 06");
			p_ramBytes= ram06;
			break;
		case 7:
			Serial.println("Selected RAM 07");
			p_ramBytes= ram07;
			break;
		case 8:
			Serial.println("Selected RAM 08");
			p_ramBytes= ram08;
			break;
		case 9:
			Serial.println("Selected RAM 09");
			p_ramBytes= ram09;
			break;
		case 10:
			Serial.println("Selected RAM 10");
			p_ramBytes= ram10;
			break;
		case 11:
			Serial.println("Selected RAM 11");
			p_ramBytes= ram11;
			break;
		case 14:
			Serial.println("Selected RAM 14");
			p_ramBytes= ram14;
			break;
		default:
			Serial.println("Selection not found, Selected Default 01");
			p_ramBytes= ram01;
		break;
	}
#else ifdef RAM_01
	Serial.println("Defined Selection");
#ifdef RAM_01
		p_ramBytes= ram01;
		Serial.println("Selected RAM 01");
#endif
#ifdef RAM_02
		Serial.println("Selected RAM 02");
		p_ramBytes= ram02;
#endif
#ifdef RAM_03
	Serial.println("Selected RAM 03");
		p_ramBytes= ram03;
#endif
#ifdef RAM_04
	Serial.println("Selected RAM 04");
		p_ramBytes= ram04;
#endif
#ifdef RAM_05
	Serial.println("Selected RAM 05");
		p_ramBytes= ram05;
#endif
#ifdef RAM_06
	Serial.println("Selected RAM 06");
		p_ramBytes= ram06;
#endif
#ifdef RAM_07
	Serial.println("Selected RAM 07");
		p_ramBytes= ram07;
#endif
#ifdef RAM_08
	Serial.println("Selected RAM 08");
		p_ramBytes= ram08;
#endif
#ifdef RAM_09
	Serial.println("Selected RAM 09");
		p_ramBytes= ram09;
#endif
#ifdef RAM_10
	Serial.println("Selected RAM 10");
		p_ramBytes= ram10;
#endif
#ifdef RAM_11
	Serial.println("Selected RAM 11");
		p_ramBytes= ram11;
#endif
#ifdef RAM_14
	Serial.println("Selected RAM 14");
		p_ramBytes= ram14;
#endif
#endif
	for ( int i = 0; i<512; i++){
		ramBytes[i] = pgm_read_byte(&p_ramBytes[i]);
	}
}
void program(void){
	digitalWrite(LED_PASS, LOW);
	digitalWrite(LED_FAIL, LOW);
	loadRam(false);
	dumpRam(false);
	verifyRam();
}
void help(void){
	Serial.println("p : program");
	Serial.println("d : dump");
	Serial.println("v : verify");
	Serial.println("c : clone, requires hot plugging memory without powering down arduino");
}


